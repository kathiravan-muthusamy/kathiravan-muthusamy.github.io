{"version":3,"sources":["StockChart/StockChart.js","ChartMain/ChartMain.js","home/Home.js","reportWebVitals.js","index.js"],"names":["StockCharts","props","noOfBars","height","width","initialData","data","ratio","trends","discontinuousTimeScaleProvider","inputDateAccessor","d","date","xScaleProvider","xScale","xAccessor","displayXAccessor","last","length","className","margin","left","right","top","bottom","type","seriesName","xExtents","id","yExtents","high","low","axisAt","orient","ticks","origin","at","displayFormat","timeFormat","format","enabled","snap","snapTo","onStart","console","log","onComplete","w","h","volume","tickFormat","yAccessor","fill","close","open","fitWidth","ChartMain","endDate","symbol","useState","setInitialData","setData","useDimensions","ref","setTrends","drawUpperTrendLine","xaTemp","xbTemp","xa","xb","a","b","x1","y1","x2","y2","maxPrice","maxPriceIndex","ix","dataPoint","noAboveLine","direction","xTemp","push","start","end","appearance","stroke","drawLowerTrendLine","minPrice","Infinity","minPriceIndex","noBelowLine","useEffect","Papa","parse","download","header","dynamicTyping","complete","results","dataTemp","filter","elem","Date","map","timeParse","getTime","slice","Option","Select","Home","setEndDate","setNoOfBars","setSymbol","options","setOptions","fetch","then","res","json","result","value","error","showSearch","style","placeholder","optionFilterProp","onChange","defaultValue","filterOption","input","option","toLowerCase","indexOf","item","moment","dateString","toDate","e","parseInt","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gaA2BA,SAASA,EAAYC,GAEnB,IAAQC,EAA+DD,EAA/DC,SAAUC,EAAqDF,EAArDE,OAAQC,EAA6CH,EAA7CG,MAAcC,EAA+BJ,EAAtCK,KAAoBC,EAAkBN,EAAlBM,MAAOC,EAAWP,EAAXO,OAI1D,EAFqBC,iCACrBC,mBAAkB,SAAAC,GAAC,OAAIA,EAAEC,OAMrBC,CAAeR,GAJfC,EADJ,EACIA,KACAQ,EAFJ,EAEIA,OACAC,EAHJ,EAGIA,UACAC,EAJJ,EAIIA,iBAIAD,EAAUE,eAAKX,IACfS,EAAUT,EAAKA,EAAKY,OAAShB,IAGnC,OACE,qBAAKiB,UAAU,eAAf,SACI,eAAC,IAAD,CACAf,MAAOA,EACPD,OAAQA,EACRI,MAAOA,EACPa,OAAQ,CAACC,KAAM,GAAIC,MAAO,GAAIC,IAAI,GAAIC,OAAQ,IAC9CC,KAAK,SACLC,WAAW,OACXpB,KAAMA,EACNQ,OAAQA,EACRC,UAAWA,EACXC,iBAAkBA,EAClBW,SAAU,CAACzB,EAAS,GAXpB,UAcI,eAAC,IAAD,CAAO0B,GAAI,EAAGC,SAAU,SAAAlB,GAAC,MAAI,CAACA,EAAEmB,KAAMnB,EAAEoB,MAAxC,UACI,cAAC,QAAD,CAAOC,OAAO,SAASC,OAAO,SAASC,MAAO,IAC9C,cAAC,QAAD,CAAOF,OAAO,QAAQC,OAAO,OAAOC,MAAO,IAC3C,cAAC,oBAAD,IACA,cAAC,kBAAD,IACA,cAAC,cAAD,CAAaC,OAAQ,CAAC,EAAG,KACzB,cAAC,mBAAD,CACEC,GAAG,SACHH,OAAO,SACPI,cAAeC,YAAW,cAC5B,cAAC,mBAAD,CACEF,GAAG,QACHH,OAAO,QACPI,cAAeE,YAAO,SAGxB,cAAC,YAAD,CAEEC,SAAS,EACTf,KAAK,MACLgB,MAAM,EACNC,OAAQ,SAAA/B,GAAC,MAAI,CAACA,EAAEmB,KAAMnB,EAAEoB,MACxBY,QAAS,kBAAMC,QAAQC,IAAI,UAC3BC,WAAY,kBAAMF,QAAQC,IAAI,aAC9BrC,OAAQA,OAId,eAAC,IAAD,CAAOoB,GAAI,EAAIO,OAAQ,SAACY,EAAGC,GAAJ,MAAU,CAAC,EAAGA,EAAI,MAAM7C,OAAQ,IAAK0B,SAAU,SAAAlB,GAAC,OAAIA,EAAEsC,QAA7E,UACE,cAAC,QAAD,CAAOjB,OAAO,OAAOC,OAAO,OAAOC,MAAO,EAAGgB,WAAYX,YAAO,SAChE,cAAC,YAAD,CAAWY,UAAW,SAAAxC,GAAC,OAAIA,EAAEsC,QAAQG,KAAM,SAACzC,GAAD,OAAOA,EAAE0C,MAAQ1C,EAAE2C,KAAO,UAAY,iBAWhFtD,MAFfA,EAAYuD,mBAASvD,G,SC7FN,SAASwD,EAAUvD,GAEhC,IAAOC,EAA2BD,EAA3BC,SAASuD,EAAkBxD,EAAlBwD,QAAQC,EAAUzD,EAAVyD,OAExB,EAAsCC,mBAAS,IAA/C,mBAAOtD,EAAP,KAAoBuD,EAApB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOrD,EAAP,KAAauD,EAAb,KACA,EAAiCC,cAAjC,mBAAOC,EAAP,YAAc3D,EAAd,EAAcA,MAAOD,EAArB,EAAqBA,OAErB,EAA4BwD,mBAAS,IAArC,mBAAOnD,EAAP,KAAewD,EAAf,KAiBA,SAASC,EAAmBzD,EAAOF,EAAK4D,EAAOC,GAO3C,GAAc,IAAXA,GAEAD,IAAW5D,EAAKY,OAAO,EAA1B,CAGA,IAAIkD,EAAGF,GAAc,EACjBG,EAAGF,GAAc7D,EAAKY,OAAO,EAEjC,GAAGmD,EAAGD,IAAO,GAAKA,EAAGC,IAAO,EAA5B,CAUA,IAPA,IAAIC,EAAE,EAAEC,EAAE,EACNC,EAAGJ,GAAM,EAAEK,EAAG,EACdC,EAAGL,GAAM/D,EAAKY,OAAO,EAAEyD,EAAG,EAE1BC,EAAW,EACXC,EAAgB,EAEZC,EAAGV,EAAGU,GAAIT,EAAGS,IACrB,CACE,IAAIC,EAAazE,EAAKwE,GAAIzB,MAAQ/C,EAAKwE,GAAIxB,KAAOhD,EAAKwE,GAAIzB,MAAQ/C,EAAKwE,GAAIxB,KACxEyB,EAAYH,IAEdA,EAAWG,EACXF,EAAgBC,GAMpB,IAAIE,EAAc,EACdC,EAAU,EAMd,KARAT,EAAGK,KAGKR,IAENK,EAAGN,EACHa,GAAW,GAETN,EATJF,EAAGG,EASyB,IAAhBI,EAAoBL,GAAM,IACtC,CAEEJ,EAAII,EAAKD,GADTJ,GAAKK,EAAKF,IAAKC,EAAKF,IAGpB,IAAI,IAAIU,EAAMV,EAAGS,EAAuB,IAAZA,EAAeC,GAAOb,EAAGa,GAAOd,EAAGc,GAAOD,EACtE,CAIE,IAHiB3E,EAAK4E,GAAO7B,MAAQ/C,EAAK4E,GAAO5B,KAAOhD,EAAK4E,GAAO7B,MAAQ/C,EAAK4E,GAAO5B,MAC9EgB,EAAIY,EAAQX,EAGtB,CACES,IAEAL,EAAGL,GADHI,EAAGQ,GACKX,EACR,QAUNA,EAAII,EAAKD,GADTJ,GAAKK,GAFLF,EAAGG,KAEYF,GADfF,EAAGK,KAGHrE,EAAO2E,KAAK,CAAEC,MAAO,CAACZ,EAAIC,GACNY,IAAK,CAACX,EAAIC,GACVW,WAAY,CAAEC,OAAQ,SACtB9D,KAAM,SAMX,IAAZwD,EACDhB,EAAmBzD,EAAOF,EAAKoE,EAAGpE,EAAKY,OAAS,GAEhD+C,EAAmBzD,EAAOF,EAAK,EAAEoE,GAE/BR,GAAWC,GACbF,EAAmBzD,EAAOF,EAAK,EAAEkE,KAGvC,SAASgB,EAAmBhF,EAAOF,EAAK4D,EAAOC,GAO3C,GADAvB,QAAQC,IAAIqB,EAAOC,GACL,IAAXA,GAEAD,IAAW5D,EAAKY,OAAO,EAA1B,CAGA,IAAIkD,EAAGF,GAAc,EACjBG,EAAGF,GAAc7D,EAAKY,OAAO,EAEjC,GAAGmD,EAAGD,IAAO,GAAKA,EAAGC,IAAO,EAA5B,CAUA,IAPA,IAAIC,EAAE,EAAEC,EAAE,EACNC,EAAGJ,GAAM,EAAEK,EAAG,EACdC,EAAGL,GAAM/D,EAAKY,OAAO,EAAEyD,EAAG,EAE1Bc,EAAWC,IACXC,EAAgBD,IAEZZ,EAAGV,EAAGU,GAAIT,EAAGS,IACrB,CACE,IAAIC,EAAazE,EAAKwE,GAAIzB,MAAQ/C,EAAKwE,GAAIxB,KAAOhD,EAAKwE,GAAIzB,MAAQ/C,EAAKwE,GAAIxB,KACxEyB,EAAYU,IAEdA,EAAWV,EACXY,EAAgBb,GAMpB,IAAIc,EAAc,EACdX,EAAU,EAMd,KARAT,EAAGmB,KAGKtB,IAENK,EAAGN,EACHa,GAAW,GAETN,EATJF,EAAGgB,EASyB,IAAhBG,EAAoBjB,GAAM,IACtC,CAEEJ,EAAII,EAAKD,GADTJ,GAAKK,EAAKF,IAAKC,EAAKF,IAGpB,IAAI,IAAIU,EAAMV,EAAGS,EAAuB,IAAZA,EAAeC,GAAOb,EAAGa,GAAOd,EAAGc,GAAOD,EACtE,CAIE,IAHiB3E,EAAK4E,GAAO7B,MAAQ/C,EAAK4E,GAAO5B,KAAOhD,EAAK4E,GAAO7B,MAAQ/C,EAAK4E,GAAO5B,MAC9EgB,EAAIY,EAAQX,EAGtB,CACEqB,IAEAjB,EAAGL,GADHI,EAAGQ,GACKX,EACR,QAUNA,EAAII,EAAKD,GADTJ,GAAKK,GAFLF,EAAGgB,KAEYf,GADfF,EAAGmB,KAGHnF,EAAO2E,KAAK,CAAEC,MAAO,CAACZ,EAAIC,GACNY,IAAK,CAACX,EAAIC,GACVW,WAAY,CAAEC,OAAQ,OACtB9D,KAAM,SAI1BmB,QAAQC,IAAI,UACZD,QAAQC,IAAI2B,EAAGE,GACA,IAAZO,EACDO,EAAmBhF,EAAOF,EAAKoE,EAAGpE,EAAKY,OAAS,GAEhDsE,EAAmBhF,EAAOF,EAAK,EAAEoE,GAE/BR,GAAWC,GACbqB,EAAmBhF,EAAOF,EAAK,EAAEkE,KAiBvC,OA7MAqB,qBAAU,WACNC,IAAKC,MAAM,WAAWrC,EAAQ,CAC5BsC,UAAU,EACVC,QAAQ,EACRC,eAAe,EACfC,SAAU,SAAAC,GACN,IAAIC,EAAUD,EAAQ9F,KAAKgG,QAAO,SAACC,GAAD,OAAUA,EAAKC,QAAMC,KAAI,SAACF,GAE1D,OADAA,EAAK3F,KAAO,IAAI4F,KAAKE,YAAU,WAAVA,CAAsBH,EAAKC,MAAMG,WAC/CJ,KAET3C,EAAeyC,QAGtB,CAAC3C,IAkLJmC,qBAAU,WACR,IAAIQ,EAAWhG,EACEiG,QAAO,SAACC,GAAD,OAAUA,EAAK3F,KAAK+F,WAAalD,EAAQkD,aAChDC,OAAO,EAAI1G,GAC5B,GAAGmG,EAASnF,OAAS,EACrB,CACE,IAAIV,EAAO,GACXyD,EAAmBzD,EAAO6F,GAC1Bb,EAAmBhF,EAAO6F,GAC1BrC,EAAUxD,GAEZqD,EAAQwC,KACP,CAAChG,EAAYH,EAASuD,IAGvB,qBAAKtC,UAAU,mBAAmB4C,IAAKA,EAAvC,SAGI1D,EAAY,GACX,cAAC,EAAD,CAECH,SAAUA,EACVE,MAAOA,EACPD,OAAQA,EACRG,KAAMA,EACNE,OAAQA,IACP,K,wCCrOHqG,EAAWC,IAAXD,OAEO,SAASE,IAGtB,MAA8BpD,mBAAS,IAAI6C,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,GAAI,IAAzE,mBAAO/C,EAAP,KAAgBuD,EAAhB,KACA,EAAgCrD,mBAAS,KAAzC,mBAAOzD,EAAP,KAAiB+G,EAAjB,KAEA,EAA4BtD,mBAAS,sBAArC,mBAAOD,EAAP,KAAewD,EAAf,KACA,EAA8BvD,mBAAS,IAAvC,mBAAOwD,EAAP,KAAgBC,EAAhB,KAiBA,OAfAvB,qBAAU,WACRwB,MAAM,mBACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCL,EAAWK,EAAOhB,KAAI,SAACF,GAAU,MAAO,CAACmB,MAAQnB,UAKnD,SAACoB,SAGJ,IAGD,sBAAKxG,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,CAAO8D,UAAU,WAAjB,UACE,cAAC,IAAD,CACE2C,YAAU,EACVC,MAAO,CAAEzH,MAAO,KAChB0H,YAAY,kBACZC,iBAAiB,WACjBC,SAAU,SAACN,GAAD,OAAWR,EAAUQ,IAC/BO,aAAcvE,EAIdwE,aAAc,SAACC,EAAOC,GAElB,OADAxF,QAAQC,IAAIuF,GACLA,EAAOV,MAAMW,cAAcC,QAAQH,EAAME,gBAAkB,GAZxE,SAgBGlB,EAAQV,KAAI,SAAA8B,GAAI,OACjB,cAAC1B,EAAD,UAA0B0B,EAAKb,OAAlBa,EAAKb,YAGpB,cAAC,IAAD,CAAYO,aAAcO,IAAO/E,GAAUuE,SAAU,SAACpH,EAAM6H,GAAgBzB,EAAWpG,EAAK8H,aAC5F,cAAC,IAAD,CAAOZ,YAAY,aAAaG,aAAc/H,EAAU8H,SAAU,SAACW,GAAD,OAAO1B,EAAa2B,SAASD,EAAEE,OAAOnB,OAAO,GAAIkB,SAASD,EAAEE,OAAOnB,OAAO,YAGhJ,qBAAKvG,UAAU,YAAf,SACE,cAAC,EAAD,CAAWjB,SAAUA,EAAUuD,QAASA,EAASC,OAAQA,SC5DjE,IAYeoF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dbab1cb5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './StockChart.css'\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { utcDay } from \"d3-time\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries, BarSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { fitWidth, fitDimensions } from \"react-stockcharts/lib/helper\";\r\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport { StraightLine } from \"react-stockcharts/lib/series\";\r\nimport { OHLCTooltip} from  \"react-stockcharts/lib/tooltip\";\r\nimport { TrendLine, DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\r\n\r\nimport {\r\n\tCrossHairCursor,\r\n\tEdgeIndicator,\r\n\tCurrentCoordinate,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nfunction StockCharts(props) {\r\n\r\n  const { noOfBars, height, width, data : initialData, ratio, trends } = props;\r\n\r\n  const xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n    const {\r\n        data,\r\n        xScale,\r\n        xAccessor,\r\n        displayXAccessor,\r\n    } = xScaleProvider(initialData);\r\n\r\n    var xExtents = [\r\n        xAccessor(last(data)),\r\n        xAccessor(data[data.length - noOfBars])\r\n    ];\r\n\r\n  return (\r\n    <div className=\"ChartContent\">\r\n        <ChartCanvas \r\n        width={width} \r\n        height={height}\r\n        ratio={ratio}\r\n        margin={{left: 50, right: 50, top:10, bottom: 30}} \r\n        type=\"hybrid\"\r\n        seriesName=\"MSFT\"\r\n        data={data}\r\n        xScale={xScale}\r\n        xAccessor={xAccessor}\r\n        displayXAccessor={displayXAccessor}\r\n        xExtents={[noOfBars,0]}\r\n      >\r\n\r\n            <Chart id={1} yExtents={d => [d.high, d.low]}>\r\n                <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\r\n                <YAxis axisAt=\"right\" orient=\"left\" ticks={5} />\r\n                <CandlestickSeries />\r\n                <CrossHairCursor />\r\n                <OHLCTooltip origin={[0, 0]}/>\r\n                <MouseCoordinateX\r\n                  at=\"bottom\"\r\n                  orient=\"bottom\"\r\n                  displayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n                <MouseCoordinateY\r\n                  at=\"right\"\r\n                  orient=\"right\"\r\n                  displayFormat={format(\".2f\")} />\r\n\r\n                  \r\n                <TrendLine\r\n                  // ref={this.saveInteractiveNodes(\"Trendline\", 1)}\r\n                  enabled={false}\r\n                  type=\"RAY\"\r\n                  snap={false}\r\n                  snapTo={d => [d.high, d.low]}\r\n                  onStart={() => console.log(\"START\")}\r\n                  onComplete={() => console.log(\"COMPLETE\")}\r\n                  trends={trends}\r\n                />\r\n            </Chart>\r\n\r\n            <Chart id={2}  origin={(w, h) => [0, h - 150]} height={150} yExtents={d => d.volume} >\r\n              <YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".0s\")}/>\r\n              <BarSeries yAccessor={d => d.volume} fill={(d) => d.close > d.open ? \"#6BA583\" : \"red\"}/>\r\n            </Chart>\r\n        </ChartCanvas>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n// StockCharts=fitDimensions(StockCharts);\r\nStockCharts=fitWidth(StockCharts);\r\n\r\nexport default StockCharts;","import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse'\r\nimport './ChartMain.css'\r\nimport StockCharts from '../StockChart/StockChart'\r\nimport { timeParse } from \"d3-time-format\";\r\nimport useDimensions from \"react-use-dimensions\";\r\n\r\nexport default function ChartMain(props) {\r\n\r\n  const {noOfBars,endDate,symbol} = props;\r\n\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [ref, { width, height }] = useDimensions();\r\n\r\n  const [trends, setTrends] = useState([]); \r\n\r\n  useEffect(() => {\r\n      Papa.parse('/assets/'+symbol, {\r\n        download: true,\r\n        header: true,\r\n        dynamicTyping: true,\r\n        complete: results => {\r\n            let dataTemp =results.data.filter((elem) => elem.Date).map((elem) => {\r\n              elem.date = new Date(timeParse(\"%Y-%m-%d\")(elem.Date).getTime());\r\n              return elem;\r\n            });\r\n            setInitialData(dataTemp);\r\n        }\r\n      })\r\n  }, [symbol])\r\n\r\n  function drawUpperTrendLine(trends,data,xaTemp,xbTemp) {\r\n    // y = ax + b\r\n      // y1 = ax1 + b\r\n      // y2 = ax2 + b\r\n      // a = (y2 - y1)/(x2 - x1)\r\n      // b = y2 - x2a\r\n      // console.log(xaTemp,xbTemp)\r\n      if(xbTemp === 0)\r\n        return;\r\n      if(xaTemp === data.length-1)\r\n        return;\r\n\r\n      let xa=xaTemp?xaTemp:0;\r\n      let xb=xbTemp?xbTemp:data.length-1;\r\n\r\n      if(xb-xa === 1 || xa-xb === 1)\r\n        return;\r\n\r\n      let a=1,b=1;\r\n      let x1=xa?xa:0,y1=0;\r\n      let x2=xb?xb:data.length-1,y2=0;\r\n\r\n      let maxPrice = 0;\r\n      let maxPriceIndex = 0;\r\n      \r\n      for(let ix=xa;ix<=xb;ix++)\r\n      {\r\n        let dataPoint = (data[ix].close > data[ix].open)? data[ix].close : data[ix].open\r\n        if (dataPoint > maxPrice)\r\n        {\r\n          maxPrice = dataPoint;\r\n          maxPriceIndex = ix;\r\n        }\r\n      }\r\n\r\n      y1=maxPrice\r\n      x1=maxPriceIndex\r\n      let noAboveLine = 0\r\n      let direction=1;\r\n      if(x1===xb)\r\n      {\r\n        x2=xa\r\n        direction=-1;\r\n      }\r\n      for(y2=y1 ; noAboveLine === 0 ; y2=y2-0.01)\r\n      {\r\n        a = (y2 - y1)/(x2 - x1)\r\n        b = y2 - x2*a\r\n\r\n        for(let xTemp=x1+direction;(direction===1)?xTemp<=xb:xTemp>=xa;xTemp+=direction)\r\n        {\r\n          let dataPoint = (data[xTemp].close > data[xTemp].open)? data[xTemp].close : data[xTemp].open\r\n          let yline=a * xTemp + b\r\n          \r\n          if(dataPoint > yline )\r\n          {\r\n            noAboveLine++;\r\n            x2=xTemp;\r\n            y2=a*x2+b;\r\n            break;\r\n          } \r\n        }\r\n      }\r\n\r\n      // y2=y2-0.1 ;\r\n\r\n      y1=maxPrice\r\n      x1=maxPriceIndex\r\n      a = (y2 - y1)/(x2 - x1)\r\n      b = y2 - x2*a\r\n      trends.push({ start: [x1, y1], \r\n                          end: [x2, y2], \r\n                          appearance: { stroke: \"green\" }, \r\n                          type: \"LINE\" \r\n                        }\r\n                  );\r\n      // drawTrendLine(trends,data,0,(direction===1)?x1:x2);\r\n      // console.log(\"result\");\r\n      // console.log(x1,x2)\r\n      if(direction===1)\r\n        drawUpperTrendLine(trends,data,x2,data.length - 1);\r\n      else\r\n        drawUpperTrendLine(trends,data,0,x2);\r\n\r\n      if(!xaTemp && !xbTemp)\r\n        drawUpperTrendLine(trends,data,0,x1);\r\n  }\r\n\r\n  function drawLowerTrendLine(trends,data,xaTemp,xbTemp) {\r\n    // y = ax + b\r\n      // y1 = ax1 + b\r\n      // y2 = ax2 + b\r\n      // a = (y2 - y1)/(x2 - x1)\r\n      // b = y2 - x2a\r\n      console.log(xaTemp,xbTemp)\r\n      if(xbTemp === 0)\r\n        return;\r\n      if(xaTemp === data.length-1)\r\n        return;\r\n\r\n      let xa=xaTemp?xaTemp:0;\r\n      let xb=xbTemp?xbTemp:data.length-1;\r\n\r\n      if(xb-xa === 1 || xa-xb === 1)\r\n        return;\r\n\r\n      let a=1,b=1;\r\n      let x1=xa?xa:0,y1=0;\r\n      let x2=xb?xb:data.length-1,y2=0;\r\n\r\n      let minPrice = Infinity;\r\n      let minPriceIndex = Infinity;\r\n      \r\n      for(let ix=xa;ix<=xb;ix++)\r\n      {\r\n        let dataPoint = (data[ix].close < data[ix].open)? data[ix].close : data[ix].open\r\n        if (dataPoint < minPrice)\r\n        {\r\n          minPrice = dataPoint;\r\n          minPriceIndex = ix;\r\n        }\r\n      }\r\n\r\n      y1=minPrice\r\n      x1=minPriceIndex\r\n      let noBelowLine = 0\r\n      let direction=1;\r\n      if(x1===xb)\r\n      {\r\n        x2=xa\r\n        direction=-1;\r\n      }\r\n      for(y2=y1 ; noBelowLine === 0 ; y2=y2+0.01)\r\n      {\r\n        a = (y2 - y1)/(x2 - x1)\r\n        b = y2 - x2*a\r\n\r\n        for(let xTemp=x1+direction;(direction===1)?xTemp<=xb:xTemp>=xa;xTemp+=direction)\r\n        {\r\n          let dataPoint = (data[xTemp].close < data[xTemp].open)? data[xTemp].close : data[xTemp].open\r\n          let yline=a * xTemp + b\r\n          \r\n          if(dataPoint < yline )\r\n          {\r\n            noBelowLine++;\r\n            x2=xTemp;\r\n            y2=a*x2+b;\r\n            break;\r\n          } \r\n        }\r\n      }\r\n\r\n      // y2=y2-0.1 ;\r\n\r\n      y1=minPrice\r\n      x1=minPriceIndex\r\n      a = (y2 - y1)/(x2 - x1)\r\n      b = y2 - x2*a\r\n      trends.push({ start: [x1, y1], \r\n                          end: [x2, y2], \r\n                          appearance: { stroke: \"red\" }, \r\n                          type: \"LINE\" \r\n                        }\r\n                  );\r\n      // drawTrendLine(trends,data,0,(direction===1)?x1:x2);\r\n      console.log(\"result\");\r\n      console.log(x1,x2)\r\n      if(direction===1)\r\n        drawLowerTrendLine(trends,data,x2,data.length - 1);\r\n      else\r\n        drawLowerTrendLine(trends,data,0,x2);\r\n\r\n      if(!xaTemp && !xbTemp)\r\n        drawLowerTrendLine(trends,data,0,x1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let dataTemp = initialData\r\n                    .filter((elem) => elem.date.getTime() <= endDate.getTime())\r\n                    .slice(-1 * noOfBars);\r\n    if(dataTemp.length > 0)\r\n    { \r\n      var trends=[];\r\n      drawUpperTrendLine(trends,dataTemp);\r\n      drawLowerTrendLine(trends,dataTemp);\r\n      setTrends(trends);\r\n    }\r\n    setData(dataTemp);\r\n  }, [initialData,noOfBars,endDate])\r\n\r\n  return (\r\n    <div className=\"ChartMainContent\" ref={ref}>\r\n      \r\n      {/* Stock Analysis */}\r\n      {(initialData[0])?\r\n        (<StockCharts \r\n          // ratio=\"1\"\r\n          noOfBars={noOfBars}\r\n          width={width}\r\n          height={height}\r\n          data={data}\r\n          trends={trends}/>\r\n        ):('')\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}","import React, { useState ,useEffect} from 'react';\r\nimport moment from 'moment'\r\nimport './Home.css'\r\nimport ChartMain from '../ChartMain/ChartMain'\r\nimport { Select, DatePicker, Space, Input } from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport default function Home() {\r\n\r\n  // const [startDate, setStartDate] = useState(new Date(2018, 8, 8, 0, 0, 0, 0));\r\n  const [endDate, setEndDate] = useState(new Date(2019, 5, 15, 23, 59, 59, 0));\r\n  const [noOfBars, setNoOfBars] = useState(150);\r\n\r\n  const [symbol, setSymbol] = useState(\"20MICRONS_data.csv\");\r\n  const [options, setOptions] = useState([  ]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/assets/dir.txt\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setOptions(result.map((elem) => {return {value : elem}}));\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      <div className=\"sidePanel\">\r\n        <Space direction=\"vertical\">\r\n          <Select\r\n            showSearch\r\n            style={{ width: 200 }}\r\n            placeholder=\"Select a person\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setSymbol(value)}\r\n            defaultValue={symbol}\r\n            // onFocus={onFocus}\r\n            // onBlur={onBlur}\r\n            // onSearch={onSearch}\r\n            filterOption={(input, option) => {\r\n                console.log(option)\r\n                return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            }\r\n          >\r\n            {options.map(item => (\r\n            <Option key={item.value}>{item.value}</Option>\r\n          ))}\r\n          </Select>\r\n          <DatePicker defaultValue={moment(endDate)} onChange={(date, dateString) => {setEndDate(date.toDate())}} />\r\n          <Input placeholder=\"No of Bars\" defaultValue={noOfBars} onChange={(e) => setNoOfBars((parseInt(e.target.value)>10)?parseInt(e.target.value):10)}/>\r\n        </Space>\r\n      </div>\r\n      <div className=\"mainPanel\">\r\n        <ChartMain noOfBars={noOfBars} endDate={endDate} symbol={symbol}/>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './home/Home'\nimport reportWebVitals from './reportWebVitals';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}